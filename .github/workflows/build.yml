name: Cargo Build & Test

on:
  push:
    paths:
      - .github/workflows/build.yml
      - assets/**
      - src/**
      - Cargo.toml
      - Cargo.lock
      - build.rs
  pull_request:
    paths:
      - .github/workflows/build.yml
      - assets/**
      - src/**
      - Cargo.toml
      - Cargo.lock
      - build.rs

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For setup-rust

jobs:
  build_and_test:
    name: Rust project - latest
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Rust
        uses: moonrepo/setup-rust@v1

      - name: Check
        run: cargo check

      - name: Test
        run: cargo test

  publish_dry_run:
    name: Publish dry run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Rust
        uses: moonrepo/setup-rust@v1
        with:
          cache-target: package

      - name: Publish dry run
        run: cargo publish --dry-run

  msrv:
    name: MSRV
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Rust
        uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-msrv

      - name: Verify MSRV
        id: verify
        run: cargo msrv verify

      - name: Find actual MSRV
        if: ${{ failure() && steps.verify.conclusion == 'failure' }}
        run: cargo msrv find

  unused_dependencies:
    name: Unused dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install cargo-machete
        uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-machete

      - name: Check for unused dependencies
        run: cargo machete
